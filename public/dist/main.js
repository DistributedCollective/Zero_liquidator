!function(o){var t={};function p(r){if(t[r])return t[r].exports;var e=t[r]={i:r,l:!1,exports:{}};return o[r].call(e.exports,e,e.exports,p),e.l=!0,e.exports}p.m=o,p.c=t,p.d=function(o,t,r){p.o(o,t)||Object.defineProperty(o,t,{enumerable:!0,get:r})},p.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},p.t=function(o,t){if(1&t&&(o=p(o)),8&t)return o;if(4&t&&"object"==typeof o&&o&&o.__esModule)return o;var r=Object.create(null);if(p.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:o}),2&t&&"string"!=typeof o)for(var e in o)p.d(r,e,function(t){return o[t]}.bind(null,e));return r},p.n=function(o){var t=o&&o.__esModule?function(){return o.default}:function(){return o};return p.d(t,"a",t),t},p.o=function(o,t){return Object.prototype.hasOwnProperty.call(o,t)},p.p="/",p(p.s=5)}([function(o,t,p){"use strict";var r,e=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var o={};return function(t){if(void 0===o[t]){var p=document.querySelector(t);if(window.HTMLIFrameElement&&p instanceof window.HTMLIFrameElement)try{p=p.contentDocument.head}catch(o){p=null}o[t]=p}return o[t]}}(),n=[];function l(o){for(var t=-1,p=0;p<n.length;p++)if(n[p].identifier===o){t=p;break}return t}function a(o,t){for(var p={},r=[],e=0;e<o.length;e++){var i=o[e],a=t.base?i[0]+t.base:i[0],u=p[a]||0,s="".concat(a," ").concat(u);p[a]=u+1;var c=l(s),b={css:i[1],media:i[2],sourceMap:i[3]};-1!==c?(n[c].references++,n[c].updater(b)):n.push({identifier:s,updater:h(b,t),references:1}),r.push(s)}return r}function u(o){var t=document.createElement("style"),r=o.attributes||{};if(void 0===r.nonce){var e=p.nc;e&&(r.nonce=e)}if(Object.keys(r).forEach((function(o){t.setAttribute(o,r[o])})),"function"==typeof o.insert)o.insert(t);else{var n=i(o.insert||"head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(t)}return t}var s,c=(s=[],function(o,t){return s[o]=t,s.filter(Boolean).join("\n")});function b(o,t,p,r){var e=p?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(o.styleSheet)o.styleSheet.cssText=c(t,e);else{var i=document.createTextNode(e),n=o.childNodes;n[t]&&o.removeChild(n[t]),n.length?o.insertBefore(i,n[t]):o.appendChild(i)}}function m(o,t,p){var r=p.css,e=p.media,i=p.sourceMap;if(e?o.setAttribute("media",e):o.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),o.styleSheet)o.styleSheet.cssText=r;else{for(;o.firstChild;)o.removeChild(o.firstChild);o.appendChild(document.createTextNode(r))}}var f=null,v=0;function h(o,t){var p,r,e;if(t.singleton){var i=v++;p=f||(f=u(t)),r=b.bind(null,p,i,!1),e=b.bind(null,p,i,!0)}else p=u(t),r=m.bind(null,p,t),e=function(){!function(o){if(null===o.parentNode)return!1;o.parentNode.removeChild(o)}(p)};return r(o),function(t){if(t){if(t.css===o.css&&t.media===o.media&&t.sourceMap===o.sourceMap)return;r(o=t)}else e()}}o.exports=function(o,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=e());var p=a(o=o||[],t);return function(o){if(o=o||[],"[object Array]"===Object.prototype.toString.call(o)){for(var r=0;r<p.length;r++){var e=l(p[r]);n[e].references--}for(var i=a(o,t),u=0;u<p.length;u++){var s=l(p[u]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}p=i}}}},function(o,t,p){"use strict";function r(o,t){return function(o){if(Array.isArray(o))return o}(o)||function(o,t){var p=o&&("undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"]);if(null==p)return;var r,e,i=[],n=!0,l=!1;try{for(p=p.call(o);!(n=(r=p.next()).done)&&(i.push(r.value),!t||i.length!==t);n=!0);}catch(o){l=!0,e=o}finally{try{n||null==p.return||p.return()}finally{if(l)throw e}}return i}(o,t)||function(o,t){if(!o)return;if("string"==typeof o)return e(o,t);var p=Object.prototype.toString.call(o).slice(8,-1);"Object"===p&&o.constructor&&(p=o.constructor.name);if("Map"===p||"Set"===p)return Array.from(o);if("Arguments"===p||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(p))return e(o,t)}(o,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(o,t){(null==t||t>o.length)&&(t=o.length);for(var p=0,r=new Array(t);p<t;p++)r[p]=o[p];return r}o.exports=function(o){var t=r(o,4),p=t[1],e=t[3];if(!e)return p;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),l="/*# ".concat(n," */"),a=e.sources.map((function(o){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(o," */")}));return[p].concat(a).concat([l]).join("\n")}return[p].join("\n")}},function(o,t,p){"use strict";o.exports=function(o){var t=[];return t.toString=function(){return this.map((function(t){var p=o(t);return t[2]?"@media ".concat(t[2]," {").concat(p,"}"):p})).join("")},t.i=function(o,p,r){"string"==typeof o&&(o=[[null,o,""]]);var e={};if(r)for(var i=0;i<this.length;i++){var n=this[i][0];null!=n&&(e[n]=!0)}for(var l=0;l<o.length;l++){var a=[].concat(o[l]);r&&e[a[0]]||(p&&(a[2]?a[2]="".concat(p," and ").concat(a[2]):a[2]=p),t.push(a))}},t}},function(o,t,p){"use strict";var r=p(1),e=p.n(r),i=p(2),n=p.n(i)()(e.a);n.push([o.i,"body {\n    margin: 3rem;\n    background-color: rgb(32, 32, 32);\n    color: #fff;\n}\n\na {\n  color: #00c3ff;\n}\n\n.table-hover>tbody>tr:hover {\n    background-color: rgb(33 150 243 / 14%);\n}\n\nh2 {\n  margin-top: 2rem;\n}","",{version:3,sources:["webpack://./public/src/styles.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,iCAAiC;IACjC,WAAW;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["body {\n    margin: 3rem;\n    background-color: rgb(32, 32, 32);\n    color: #fff;\n}\n\na {\n  color: #00c3ff;\n}\n\n.table-hover>tbody>tr:hover {\n    background-color: rgb(33 150 243 / 14%);\n}\n\nh2 {\n  margin-top: 2rem;\n}"],sourceRoot:""}]),t.a=n},function(o,t,p){"use strict";var r=p(1),e=p.n(r),i=p(2),n=p.n(i)()(e.a);n.push([o.i,"/* Include this file in your html if you are using the CSP mode. */\n\n.uib-position-measure {\n  display: block !important;\n  visibility: hidden !important;\n  position: absolute !important;\n  top: -9999px !important;\n  left: -9999px !important;\n}\n\n.uib-position-scrollbar-measure {\n  position: absolute !important;\n  top: -9999px !important;\n  width: 50px !important;\n  height: 50px !important;\n  overflow: scroll !important;\n}\n\n.uib-position-body-scrollbar-measure {\n  overflow: scroll !important;\n}\n[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,\n[uib-popover-popup].popover.top-left > .arrow,\n[uib-popover-popup].popover.top-right > .arrow,\n[uib-popover-popup].popover.bottom-left > .arrow,\n[uib-popover-popup].popover.bottom-right > .arrow,\n[uib-popover-popup].popover.left-top > .arrow,\n[uib-popover-popup].popover.left-bottom > .arrow,\n[uib-popover-popup].popover.right-top > .arrow,\n[uib-popover-popup].popover.right-bottom > .arrow,\n[uib-popover-html-popup].popover.top-left > .arrow,\n[uib-popover-html-popup].popover.top-right > .arrow,\n[uib-popover-html-popup].popover.bottom-left > .arrow,\n[uib-popover-html-popup].popover.bottom-right > .arrow,\n[uib-popover-html-popup].popover.left-top > .arrow,\n[uib-popover-html-popup].popover.left-bottom > .arrow,\n[uib-popover-html-popup].popover.right-top > .arrow,\n[uib-popover-html-popup].popover.right-bottom > .arrow,\n[uib-popover-template-popup].popover.top-left > .arrow,\n[uib-popover-template-popup].popover.top-right > .arrow,\n[uib-popover-template-popup].popover.bottom-left > .arrow,\n[uib-popover-template-popup].popover.bottom-right > .arrow,\n[uib-popover-template-popup].popover.left-top > .arrow,\n[uib-popover-template-popup].popover.left-bottom > .arrow,\n[uib-popover-template-popup].popover.right-top > .arrow,\n[uib-popover-template-popup].popover.right-bottom > .arrow {\n  top: auto;\n  bottom: auto;\n  left: auto;\n  right: auto;\n  margin: 0;\n}\n\n[uib-popover-popup].popover,\n[uib-popover-html-popup].popover,\n[uib-popover-template-popup].popover {\n  display: block !important;\n}\n","",{version:3,sources:["webpack://./public/src/libs/ui-bootstrap-custom-2.5.0-csp.css"],names:[],mappings:"AAAA,kEAAkE;;AAElE;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,6BAA6B;EAC7B,uBAAuB;EACvB,wBAAwB;AAC1B;;AAEA;EACE,6BAA6B;EAC7B,uBAAuB;EACvB,sBAAsB;EACtB,uBAAuB;EACvB,2BAA2B;AAC7B;;AAEA;EACE,2BAA2B;AAC7B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgDE,SAAS;EACT,YAAY;EACZ,UAAU;EACV,WAAW;EACX,SAAS;AACX;;AAEA;;;EAGE,yBAAyB;AAC3B",sourcesContent:["/* Include this file in your html if you are using the CSP mode. */\n\n.uib-position-measure {\n  display: block !important;\n  visibility: hidden !important;\n  position: absolute !important;\n  top: -9999px !important;\n  left: -9999px !important;\n}\n\n.uib-position-scrollbar-measure {\n  position: absolute !important;\n  top: -9999px !important;\n  width: 50px !important;\n  height: 50px !important;\n  overflow: scroll !important;\n}\n\n.uib-position-body-scrollbar-measure {\n  overflow: scroll !important;\n}\n[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,\n[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,\n[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,\n[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,\n[uib-popover-popup].popover.top-left > .arrow,\n[uib-popover-popup].popover.top-right > .arrow,\n[uib-popover-popup].popover.bottom-left > .arrow,\n[uib-popover-popup].popover.bottom-right > .arrow,\n[uib-popover-popup].popover.left-top > .arrow,\n[uib-popover-popup].popover.left-bottom > .arrow,\n[uib-popover-popup].popover.right-top > .arrow,\n[uib-popover-popup].popover.right-bottom > .arrow,\n[uib-popover-html-popup].popover.top-left > .arrow,\n[uib-popover-html-popup].popover.top-right > .arrow,\n[uib-popover-html-popup].popover.bottom-left > .arrow,\n[uib-popover-html-popup].popover.bottom-right > .arrow,\n[uib-popover-html-popup].popover.left-top > .arrow,\n[uib-popover-html-popup].popover.left-bottom > .arrow,\n[uib-popover-html-popup].popover.right-top > .arrow,\n[uib-popover-html-popup].popover.right-bottom > .arrow,\n[uib-popover-template-popup].popover.top-left > .arrow,\n[uib-popover-template-popup].popover.top-right > .arrow,\n[uib-popover-template-popup].popover.bottom-left > .arrow,\n[uib-popover-template-popup].popover.bottom-right > .arrow,\n[uib-popover-template-popup].popover.left-top > .arrow,\n[uib-popover-template-popup].popover.left-bottom > .arrow,\n[uib-popover-template-popup].popover.right-top > .arrow,\n[uib-popover-template-popup].popover.right-bottom > .arrow {\n  top: auto;\n  bottom: auto;\n  left: auto;\n  right: auto;\n  margin: 0;\n}\n\n[uib-popover-popup].popover,\n[uib-popover-html-popup].popover,\n[uib-popover-template-popup].popover {\n  display: block !important;\n}\n"],sourceRoot:""}]),t.a=n},function(o,t,p){p(6),p(7),o.exports=p(8)},function(o,t){const p=io();angular.module("app",["ui.bootstrap"]).controller("appCtrl",class{constructor(o){this.accounts=[],this.blockExplorer="",this.totalProfit=0,this.last24HProfit=0,this.totalSuccess=0,this.totalFailed=0,this.total24HSuccess=0,this.total24HFailed=0,this.$scope=o,this.start()}static get $inject(){return["$scope"]}start(){this.getAccountInfo(),this.getNetworkData(),this.getTotals(),this.getLast24HTotals(),setInterval(()=>{this.getAccountInfo(),this.getLast24HTotals()},15e3)}getAccountInfo(){let o=this;p.emit("getAccountInfo",t=>{console.log("response account:",t),o.accounts=[t],o.$scope.$applyAsync()})}getNetworkData(){let o=this;p.emit("getNetworkData",t=>{console.log("network data:",t),o.blockExplorer=t.blockExplorer,o.$scope.$applyAsync()})}getTotals(){let o=this;p.emit("getTotals",t=>{console.log("response totals:",t),o.totalSuccess=t.successActions,o.totalFailed=t.failedActions,o.totalProfit=t.profit,o.$scope.$applyAsync()})}getLast24HTotals(){let o=this;p.emit("getLast24HTotals",t=>{console.log("response last 24h totals:",t),o.total24HSuccess=t.successActions,o.total24HFailed=t.failedActions,o.last24HProfit=t.profit,o.$scope.$applyAsync()})}}),angular.bootstrap(document,["app"])},function(o,t,p){"use strict";p.r(t);var r=p(0),e=p.n(r),i=p(3),n={insert:"head",singleton:!1};e()(i.a,n);t.default=i.a.locals||{}},function(o,t,p){"use strict";p.r(t);var r=p(0),e=p.n(r),i=p(4),n={insert:"head",singleton:!1};e()(i.a,n);t.default=i.a.locals||{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,